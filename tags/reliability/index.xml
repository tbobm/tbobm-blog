<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Reliability on tbobm.dev</title>
    <link>https://blog.tbobm.dev/tags/reliability/</link>
    <description>Recent content in Reliability on tbobm.dev</description>
    <image>
      <title>tbobm.dev</title>
      <url>https://blog.tbobm.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.tbobm.dev/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.133.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Mar 2025 11:30:20 +0200</lastBuildDate>
    <atom:link href="https://blog.tbobm.dev/tags/reliability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Complete health checks and why they matter</title>
      <link>https://blog.tbobm.dev/posts/complete-health-checks/</link>
      <pubDate>Tue, 11 Mar 2025 11:30:20 +0200</pubDate>
      <guid>https://blog.tbobm.dev/posts/complete-health-checks/</guid>
      <description>Standard health checks tell you if an app is running but not if it’s actually working. Complete Health Checks go deeper, verifying dependencies like databases and caches to catch issues early and keep deployments smooth.
In this article, we’ll cover why they matter, how to set them up, and the key differences between liveness and readiness checks—so your services stay reliable and efficient in production.
What are health checks and why are they so useful Having an application that performs some kind of processing is only the first part of the journey.</description>
    </item>
  </channel>
</rss>
